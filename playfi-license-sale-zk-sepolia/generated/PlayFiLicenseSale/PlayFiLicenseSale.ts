// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CommissionPaid extends ethereum.Event {
  get params(): CommissionPaid__Params {
    return new CommissionPaid__Params(this);
  }
}

export class CommissionPaid__Params {
  _event: CommissionPaid;

  constructor(event: CommissionPaid) {
    this._event = event;
  }

  get code(): string {
    return this._event.parameters[0].value.toString();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ContractInitialized extends ethereum.Event {
  get params(): ContractInitialized__Params {
    return new ContractInitialized__Params(this);
  }
}

export class ContractInitialized__Params {
  _event: ContractInitialized;

  constructor(event: ContractInitialized) {
    this._event = event;
  }
}

export class EarlyAccessLicensesClaimed extends ethereum.Event {
  get params(): EarlyAccessLicensesClaimed__Params {
    return new EarlyAccessLicensesClaimed__Params(this);
  }
}

export class EarlyAccessLicensesClaimed__Params {
  _event: EarlyAccessLicensesClaimed;

  constructor(event: EarlyAccessLicensesClaimed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get paid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EarlyAccessMerkleRootSet extends ethereum.Event {
  get params(): EarlyAccessMerkleRootSet__Params {
    return new EarlyAccessMerkleRootSet__Params(this);
  }
}

export class EarlyAccessMerkleRootSet__Params {
  _event: EarlyAccessMerkleRootSet;

  constructor(event: EarlyAccessMerkleRootSet) {
    this._event = event;
  }

  get merkleRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class EarlyAccessSaleStatusSet extends ethereum.Event {
  get params(): EarlyAccessSaleStatusSet__Params {
    return new EarlyAccessSaleStatusSet__Params(this);
  }
}

export class EarlyAccessSaleStatusSet__Params {
  _event: EarlyAccessSaleStatusSet;

  constructor(event: EarlyAccessSaleStatusSet) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class FriendsFamilyLicensesClaimed extends ethereum.Event {
  get params(): FriendsFamilyLicensesClaimed__Params {
    return new FriendsFamilyLicensesClaimed__Params(this);
  }
}

export class FriendsFamilyLicensesClaimed__Params {
  _event: FriendsFamilyLicensesClaimed;

  constructor(event: FriendsFamilyLicensesClaimed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get paid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FriendsFamilyMerkleRootSet extends ethereum.Event {
  get params(): FriendsFamilyMerkleRootSet__Params {
    return new FriendsFamilyMerkleRootSet__Params(this);
  }
}

export class FriendsFamilyMerkleRootSet__Params {
  _event: FriendsFamilyMerkleRootSet;

  constructor(event: FriendsFamilyMerkleRootSet) {
    this._event = event;
  }

  get merkleRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class FriendsFamilySaleStatusSet extends ethereum.Event {
  get params(): FriendsFamilySaleStatusSet__Params {
    return new FriendsFamilySaleStatusSet__Params(this);
  }
}

export class FriendsFamilySaleStatusSet__Params {
  _event: FriendsFamilySaleStatusSet;

  constructor(event: FriendsFamilySaleStatusSet) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class PartnerLicensesClaimed extends ethereum.Event {
  get params(): PartnerLicensesClaimed__Params {
    return new PartnerLicensesClaimed__Params(this);
  }
}

export class PartnerLicensesClaimed__Params {
  _event: PartnerLicensesClaimed;

  constructor(event: PartnerLicensesClaimed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tier(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get paid(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get partnerCode(): string {
    return this._event.parameters[4].value.toString();
  }

  get referral(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class PartnerReceiverAddressSet extends ethereum.Event {
  get params(): PartnerReceiverAddressSet__Params {
    return new PartnerReceiverAddressSet__Params(this);
  }
}

export class PartnerReceiverAddressSet__Params {
  _event: PartnerReceiverAddressSet;

  constructor(event: PartnerReceiverAddressSet) {
    this._event = event;
  }

  get partnerCode(): string {
    return this._event.parameters[0].value.toString();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PartnerSaleStatusSet extends ethereum.Event {
  get params(): PartnerSaleStatusSet__Params {
    return new PartnerSaleStatusSet__Params(this);
  }
}

export class PartnerSaleStatusSet__Params {
  _event: PartnerSaleStatusSet;

  constructor(event: PartnerSaleStatusSet) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }

  get partnerCode(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class PartnerTierSet extends ethereum.Event {
  get params(): PartnerTierSet__Params {
    return new PartnerTierSet__Params(this);
  }
}

export class PartnerTierSet__Params {
  _event: PartnerTierSet;

  constructor(event: PartnerTierSet) {
    this._event = event;
  }

  get partnerCode(): string {
    return this._event.parameters[0].value.toString();
  }

  get tierId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get individualCap(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalClaimed(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get totalCap(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ProceedsWithdrawn extends ethereum.Event {
  get params(): ProceedsWithdrawn__Params {
    return new ProceedsWithdrawn__Params(this);
  }
}

export class ProceedsWithdrawn__Params {
  _event: ProceedsWithdrawn;

  constructor(event: ProceedsWithdrawn) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PublicLicensesClaimed extends ethereum.Event {
  get params(): PublicLicensesClaimed__Params {
    return new PublicLicensesClaimed__Params(this);
  }
}

export class PublicLicensesClaimed__Params {
  _event: PublicLicensesClaimed;

  constructor(event: PublicLicensesClaimed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tier(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get paid(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get referral(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class PublicMerkleRootSet extends ethereum.Event {
  get params(): PublicMerkleRootSet__Params {
    return new PublicMerkleRootSet__Params(this);
  }
}

export class PublicMerkleRootSet__Params {
  _event: PublicMerkleRootSet;

  constructor(event: PublicMerkleRootSet) {
    this._event = event;
  }

  get merkleRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class PublicSaleStatusSet extends ethereum.Event {
  get params(): PublicSaleStatusSet__Params {
    return new PublicSaleStatusSet__Params(this);
  }
}

export class PublicSaleStatusSet__Params {
  _event: PublicSaleStatusSet;

  constructor(event: PublicSaleStatusSet) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class PublicWhitelistLicensesClaimed extends ethereum.Event {
  get params(): PublicWhitelistLicensesClaimed__Params {
    return new PublicWhitelistLicensesClaimed__Params(this);
  }
}

export class PublicWhitelistLicensesClaimed__Params {
  _event: PublicWhitelistLicensesClaimed;

  constructor(event: PublicWhitelistLicensesClaimed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tier(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get paid(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get referral(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class PublicWhitelistSaleStatusSet extends ethereum.Event {
  get params(): PublicWhitelistSaleStatusSet__Params {
    return new PublicWhitelistSaleStatusSet__Params(this);
  }
}

export class PublicWhitelistSaleStatusSet__Params {
  _event: PublicWhitelistSaleStatusSet;

  constructor(event: PublicWhitelistSaleStatusSet) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class ReferralUpdated extends ethereum.Event {
  get params(): ReferralUpdated__Params {
    return new ReferralUpdated__Params(this);
  }
}

export class ReferralUpdated__Params {
  _event: ReferralUpdated;

  constructor(event: ReferralUpdated) {
    this._event = event;
  }

  get code(): string {
    return this._event.parameters[0].value.toString();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TeamLicensesClaimed extends ethereum.Event {
  get params(): TeamLicensesClaimed__Params {
    return new TeamLicensesClaimed__Params(this);
  }
}

export class TeamLicensesClaimed__Params {
  _event: TeamLicensesClaimed;

  constructor(event: TeamLicensesClaimed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TeamMerkleRootSet extends ethereum.Event {
  get params(): TeamMerkleRootSet__Params {
    return new TeamMerkleRootSet__Params(this);
  }
}

export class TeamMerkleRootSet__Params {
  _event: TeamMerkleRootSet;

  constructor(event: TeamMerkleRootSet) {
    this._event = event;
  }

  get merkleRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class TeamSaleStatusSet extends ethereum.Event {
  get params(): TeamSaleStatusSet__Params {
    return new TeamSaleStatusSet__Params(this);
  }
}

export class TeamSaleStatusSet__Params {
  _event: TeamSaleStatusSet;

  constructor(event: TeamSaleStatusSet) {
    this._event = event;
  }

  get status(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class TierSet extends ethereum.Event {
  get params(): TierSet__Params {
    return new TierSet__Params(this);
  }
}

export class TierSet__Params {
  _event: TierSet;

  constructor(event: TierSet) {
    this._event = event;
  }

  get tierId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get individualCap(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalClaimed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalCap(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class WhitelistTierSet extends ethereum.Event {
  get params(): WhitelistTierSet__Params {
    return new WhitelistTierSet__Params(this);
  }
}

export class WhitelistTierSet__Params {
  _event: WhitelistTierSet;

  constructor(event: WhitelistTierSet) {
    this._event = event;
  }

  get tierId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get individualCap(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalClaimed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalCap(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PlayFiLicenseSale__getPartnerTierResultTierStruct extends ethereum.Tuple {
  get price(): BigInt {
    return this[0].toBigInt();
  }

  get individualCap(): BigInt {
    return this[1].toBigInt();
  }

  get totalClaimed(): BigInt {
    return this[2].toBigInt();
  }

  get totalCap(): BigInt {
    return this[3].toBigInt();
  }
}

export class PlayFiLicenseSale__getReferralResultReferralStruct extends ethereum.Tuple {
  get totalClaims(): BigInt {
    return this[0].toBigInt();
  }

  get receiver(): Address {
    return this[1].toAddress();
  }
}

export class PlayFiLicenseSale__getTierResultTierStruct extends ethereum.Tuple {
  get price(): BigInt {
    return this[0].toBigInt();
  }

  get individualCap(): BigInt {
    return this[1].toBigInt();
  }

  get totalClaimed(): BigInt {
    return this[2].toBigInt();
  }

  get totalCap(): BigInt {
    return this[3].toBigInt();
  }
}

export class PlayFiLicenseSale__partnerReferralsResult {
  value0: BigInt;
  value1: Address;

  constructor(value0: BigInt, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getTotalClaims(): BigInt {
    return this.value0;
  }

  getReceiver(): Address {
    return this.value1;
  }
}

export class PlayFiLicenseSale__partnerTiersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getPrice(): BigInt {
    return this.value0;
  }

  getIndividualCap(): BigInt {
    return this.value1;
  }

  getTotalClaimed(): BigInt {
    return this.value2;
  }

  getTotalCap(): BigInt {
    return this.value3;
  }
}

export class PlayFiLicenseSale__paymentDetailsForPartnerReferralResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getToPay(): BigInt {
    return this.value0;
  }

  getCommission(): BigInt {
    return this.value1;
  }

  getDiscount(): BigInt {
    return this.value2;
  }
}

export class PlayFiLicenseSale__paymentDetailsForReferralResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getToPay(): BigInt {
    return this.value0;
  }

  getCommission(): BigInt {
    return this.value1;
  }

  getDiscount(): BigInt {
    return this.value2;
  }
}

export class PlayFiLicenseSale__referralsResult {
  value0: BigInt;
  value1: Address;

  constructor(value0: BigInt, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getTotalClaims(): BigInt {
    return this.value0;
  }

  getReceiver(): Address {
    return this.value1;
  }
}

export class PlayFiLicenseSale__tiersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getPrice(): BigInt {
    return this.value0;
  }

  getIndividualCap(): BigInt {
    return this.value1;
  }

  getTotalClaimed(): BigInt {
    return this.value2;
  }

  getTotalCap(): BigInt {
    return this.value3;
  }
}

export class PlayFiLicenseSale__whitelistTiersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getPrice(): BigInt {
    return this.value0;
  }

  getIndividualCap(): BigInt {
    return this.value1;
  }

  getTotalClaimed(): BigInt {
    return this.value2;
  }

  getTotalCap(): BigInt {
    return this.value3;
  }
}

export class PlayFiLicenseSale extends ethereum.SmartContract {
  static bind(address: Address): PlayFiLicenseSale {
    return new PlayFiLicenseSale("PlayFiLicenseSale", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GUARDIAN_ROLE(): Bytes {
    let result = super.call("GUARDIAN_ROLE", "GUARDIAN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_GUARDIAN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GUARDIAN_ROLE",
      "GUARDIAN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MERKLE_MANAGER_ROLE(): Bytes {
    let result = super.call(
      "MERKLE_MANAGER_ROLE",
      "MERKLE_MANAGER_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_MERKLE_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MERKLE_MANAGER_ROLE",
      "MERKLE_MANAGER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REFERRAL_MANAGER_ROLE(): Bytes {
    let result = super.call(
      "REFERRAL_MANAGER_ROLE",
      "REFERRAL_MANAGER_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_REFERRAL_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "REFERRAL_MANAGER_ROLE",
      "REFERRAL_MANAGER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  claimsPerTierPerAddress(param0: BigInt, param1: Address): BigInt {
    let result = super.call(
      "claimsPerTierPerAddress",
      "claimsPerTierPerAddress(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_claimsPerTierPerAddress(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimsPerTierPerAddress",
      "claimsPerTierPerAddress(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  earlyAccessClaimsPerAddress(param0: Address): BigInt {
    let result = super.call(
      "earlyAccessClaimsPerAddress",
      "earlyAccessClaimsPerAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_earlyAccessClaimsPerAddress(
    param0: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "earlyAccessClaimsPerAddress",
      "earlyAccessClaimsPerAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  earlyAccessMerkleRoot(): Bytes {
    let result = super.call(
      "earlyAccessMerkleRoot",
      "earlyAccessMerkleRoot():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_earlyAccessMerkleRoot(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "earlyAccessMerkleRoot",
      "earlyAccessMerkleRoot():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  earlyAccessSaleActive(): boolean {
    let result = super.call(
      "earlyAccessSaleActive",
      "earlyAccessSaleActive():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_earlyAccessSaleActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "earlyAccessSaleActive",
      "earlyAccessSaleActive():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  friendsFamilyClaimsPerAddress(param0: Address): BigInt {
    let result = super.call(
      "friendsFamilyClaimsPerAddress",
      "friendsFamilyClaimsPerAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_friendsFamilyClaimsPerAddress(
    param0: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "friendsFamilyClaimsPerAddress",
      "friendsFamilyClaimsPerAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  friendsFamilyMerkleRoot(): Bytes {
    let result = super.call(
      "friendsFamilyMerkleRoot",
      "friendsFamilyMerkleRoot():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_friendsFamilyMerkleRoot(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "friendsFamilyMerkleRoot",
      "friendsFamilyMerkleRoot():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  friendsFamilySaleActive(): boolean {
    let result = super.call(
      "friendsFamilySaleActive",
      "friendsFamilySaleActive():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_friendsFamilySaleActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "friendsFamilySaleActive",
      "friendsFamilySaleActive():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getPartnerTier(
    partnerCode: string,
    id: BigInt,
  ): PlayFiLicenseSale__getPartnerTierResultTierStruct {
    let result = super.call(
      "getPartnerTier",
      "getPartnerTier(string,uint256):((uint256,uint256,uint256,uint256))",
      [
        ethereum.Value.fromString(partnerCode),
        ethereum.Value.fromUnsignedBigInt(id),
      ],
    );

    return changetype<PlayFiLicenseSale__getPartnerTierResultTierStruct>(
      result[0].toTuple(),
    );
  }

  try_getPartnerTier(
    partnerCode: string,
    id: BigInt,
  ): ethereum.CallResult<PlayFiLicenseSale__getPartnerTierResultTierStruct> {
    let result = super.tryCall(
      "getPartnerTier",
      "getPartnerTier(string,uint256):((uint256,uint256,uint256,uint256))",
      [
        ethereum.Value.fromString(partnerCode),
        ethereum.Value.fromUnsignedBigInt(id),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PlayFiLicenseSale__getPartnerTierResultTierStruct>(
        value[0].toTuple(),
      ),
    );
  }

  getReferral(id: string): PlayFiLicenseSale__getReferralResultReferralStruct {
    let result = super.call(
      "getReferral",
      "getReferral(string):((uint256,address))",
      [ethereum.Value.fromString(id)],
    );

    return changetype<PlayFiLicenseSale__getReferralResultReferralStruct>(
      result[0].toTuple(),
    );
  }

  try_getReferral(
    id: string,
  ): ethereum.CallResult<PlayFiLicenseSale__getReferralResultReferralStruct> {
    let result = super.tryCall(
      "getReferral",
      "getReferral(string):((uint256,address))",
      [ethereum.Value.fromString(id)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PlayFiLicenseSale__getReferralResultReferralStruct>(
        value[0].toTuple(),
      ),
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTier(
    id: BigInt,
    isWhitelist: boolean,
  ): PlayFiLicenseSale__getTierResultTierStruct {
    let result = super.call(
      "getTier",
      "getTier(uint256,bool):((uint256,uint256,uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromBoolean(isWhitelist),
      ],
    );

    return changetype<PlayFiLicenseSale__getTierResultTierStruct>(
      result[0].toTuple(),
    );
  }

  try_getTier(
    id: BigInt,
    isWhitelist: boolean,
  ): ethereum.CallResult<PlayFiLicenseSale__getTierResultTierStruct> {
    let result = super.tryCall(
      "getTier",
      "getTier(uint256,bool):((uint256,uint256,uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromBoolean(isWhitelist),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PlayFiLicenseSale__getTierResultTierStruct>(
        value[0].toTuple(),
      ),
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  partnerClaimsPerAddress(param0: string, param1: Address): BigInt {
    let result = super.call(
      "partnerClaimsPerAddress",
      "partnerClaimsPerAddress(string,address):(uint256)",
      [ethereum.Value.fromString(param0), ethereum.Value.fromAddress(param1)],
    );

    return result[0].toBigInt();
  }

  try_partnerClaimsPerAddress(
    param0: string,
    param1: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "partnerClaimsPerAddress",
      "partnerClaimsPerAddress(string,address):(uint256)",
      [ethereum.Value.fromString(param0), ethereum.Value.fromAddress(param1)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  partnerClaimsPerTierPerAddress(
    param0: string,
    param1: BigInt,
    param2: Address,
  ): BigInt {
    let result = super.call(
      "partnerClaimsPerTierPerAddress",
      "partnerClaimsPerTierPerAddress(string,uint256,address):(uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2),
      ],
    );

    return result[0].toBigInt();
  }

  try_partnerClaimsPerTierPerAddress(
    param0: string,
    param1: BigInt,
    param2: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "partnerClaimsPerTierPerAddress",
      "partnerClaimsPerTierPerAddress(string,uint256,address):(uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  partnerReferrals(param0: string): PlayFiLicenseSale__partnerReferralsResult {
    let result = super.call(
      "partnerReferrals",
      "partnerReferrals(string):(uint256,address)",
      [ethereum.Value.fromString(param0)],
    );

    return new PlayFiLicenseSale__partnerReferralsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
    );
  }

  try_partnerReferrals(
    param0: string,
  ): ethereum.CallResult<PlayFiLicenseSale__partnerReferralsResult> {
    let result = super.tryCall(
      "partnerReferrals",
      "partnerReferrals(string):(uint256,address)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayFiLicenseSale__partnerReferralsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
      ),
    );
  }

  partnerSaleActive(param0: string): boolean {
    let result = super.call(
      "partnerSaleActive",
      "partnerSaleActive(string):(bool)",
      [ethereum.Value.fromString(param0)],
    );

    return result[0].toBoolean();
  }

  try_partnerSaleActive(param0: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "partnerSaleActive",
      "partnerSaleActive(string):(bool)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  partnerTiers(
    param0: string,
    param1: BigInt,
  ): PlayFiLicenseSale__partnerTiersResult {
    let result = super.call(
      "partnerTiers",
      "partnerTiers(string,uint256):(uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return new PlayFiLicenseSale__partnerTiersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_partnerTiers(
    param0: string,
    param1: BigInt,
  ): ethereum.CallResult<PlayFiLicenseSale__partnerTiersResult> {
    let result = super.tryCall(
      "partnerTiers",
      "partnerTiers(string,uint256):(uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayFiLicenseSale__partnerTiersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  paymentDetailsForPartnerReferral(
    amount: BigInt,
    tier: BigInt,
    partnerCode: string,
    referral: string,
  ): PlayFiLicenseSale__paymentDetailsForPartnerReferralResult {
    let result = super.call(
      "paymentDetailsForPartnerReferral",
      "paymentDetailsForPartnerReferral(uint256,uint256,string,string):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(tier),
        ethereum.Value.fromString(partnerCode),
        ethereum.Value.fromString(referral),
      ],
    );

    return new PlayFiLicenseSale__paymentDetailsForPartnerReferralResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_paymentDetailsForPartnerReferral(
    amount: BigInt,
    tier: BigInt,
    partnerCode: string,
    referral: string,
  ): ethereum.CallResult<PlayFiLicenseSale__paymentDetailsForPartnerReferralResult> {
    let result = super.tryCall(
      "paymentDetailsForPartnerReferral",
      "paymentDetailsForPartnerReferral(uint256,uint256,string,string):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(tier),
        ethereum.Value.fromString(partnerCode),
        ethereum.Value.fromString(referral),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayFiLicenseSale__paymentDetailsForPartnerReferralResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  paymentDetailsForReferral(
    amount: BigInt,
    tier: BigInt,
    referral: string,
    isWhitelist: boolean,
  ): PlayFiLicenseSale__paymentDetailsForReferralResult {
    let result = super.call(
      "paymentDetailsForReferral",
      "paymentDetailsForReferral(uint256,uint256,string,bool):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(tier),
        ethereum.Value.fromString(referral),
        ethereum.Value.fromBoolean(isWhitelist),
      ],
    );

    return new PlayFiLicenseSale__paymentDetailsForReferralResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_paymentDetailsForReferral(
    amount: BigInt,
    tier: BigInt,
    referral: string,
    isWhitelist: boolean,
  ): ethereum.CallResult<PlayFiLicenseSale__paymentDetailsForReferralResult> {
    let result = super.tryCall(
      "paymentDetailsForReferral",
      "paymentDetailsForReferral(uint256,uint256,string,bool):(uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(tier),
        ethereum.Value.fromString(referral),
        ethereum.Value.fromBoolean(isWhitelist),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayFiLicenseSale__paymentDetailsForReferralResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  publicClaimsPerAddress(param0: Address): BigInt {
    let result = super.call(
      "publicClaimsPerAddress",
      "publicClaimsPerAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_publicClaimsPerAddress(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "publicClaimsPerAddress",
      "publicClaimsPerAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  publicMerkleRoot(): Bytes {
    let result = super.call(
      "publicMerkleRoot",
      "publicMerkleRoot():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_publicMerkleRoot(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "publicMerkleRoot",
      "publicMerkleRoot():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  publicSaleActive(): boolean {
    let result = super.call(
      "publicSaleActive",
      "publicSaleActive():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_publicSaleActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "publicSaleActive",
      "publicSaleActive():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  publicWhitelistClaimsPerAddressAndReferral(
    param0: Address,
    param1: string,
  ): BigInt {
    let result = super.call(
      "publicWhitelistClaimsPerAddressAndReferral",
      "publicWhitelistClaimsPerAddressAndReferral(address,string):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromString(param1)],
    );

    return result[0].toBigInt();
  }

  try_publicWhitelistClaimsPerAddressAndReferral(
    param0: Address,
    param1: string,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "publicWhitelistClaimsPerAddressAndReferral",
      "publicWhitelistClaimsPerAddressAndReferral(address,string):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromString(param1)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  publicWhitelistSaleActive(): boolean {
    let result = super.call(
      "publicWhitelistSaleActive",
      "publicWhitelistSaleActive():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_publicWhitelistSaleActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "publicWhitelistSaleActive",
      "publicWhitelistSaleActive():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  receiverToReferralCode(param0: Address): string {
    let result = super.call(
      "receiverToReferralCode",
      "receiverToReferralCode(address):(string)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toString();
  }

  try_receiverToReferralCode(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "receiverToReferralCode",
      "receiverToReferralCode(address):(string)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  referrals(param0: string): PlayFiLicenseSale__referralsResult {
    let result = super.call(
      "referrals",
      "referrals(string):(uint256,address)",
      [ethereum.Value.fromString(param0)],
    );

    return new PlayFiLicenseSale__referralsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
    );
  }

  try_referrals(
    param0: string,
  ): ethereum.CallResult<PlayFiLicenseSale__referralsResult> {
    let result = super.tryCall(
      "referrals",
      "referrals(string):(uint256,address)",
      [ethereum.Value.fromString(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayFiLicenseSale__referralsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
      ),
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  teamClaimsPerAddress(param0: Address): BigInt {
    let result = super.call(
      "teamClaimsPerAddress",
      "teamClaimsPerAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_teamClaimsPerAddress(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "teamClaimsPerAddress",
      "teamClaimsPerAddress(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  teamMerkleRoot(): Bytes {
    let result = super.call("teamMerkleRoot", "teamMerkleRoot():(bytes32)", []);

    return result[0].toBytes();
  }

  try_teamMerkleRoot(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "teamMerkleRoot",
      "teamMerkleRoot():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  teamSaleActive(): boolean {
    let result = super.call("teamSaleActive", "teamSaleActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_teamSaleActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("teamSaleActive", "teamSaleActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tiers(param0: BigInt): PlayFiLicenseSale__tiersResult {
    let result = super.call(
      "tiers",
      "tiers(uint256):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new PlayFiLicenseSale__tiersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_tiers(
    param0: BigInt,
  ): ethereum.CallResult<PlayFiLicenseSale__tiersResult> {
    let result = super.tryCall(
      "tiers",
      "tiers(uint256):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayFiLicenseSale__tiersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }

  totalLicenses(): BigInt {
    let result = super.call("totalLicenses", "totalLicenses():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalLicenses(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalLicenses",
      "totalLicenses():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  whitelistTiers(param0: BigInt): PlayFiLicenseSale__whitelistTiersResult {
    let result = super.call(
      "whitelistTiers",
      "whitelistTiers(uint256):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new PlayFiLicenseSale__whitelistTiersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
    );
  }

  try_whitelistTiers(
    param0: BigInt,
  ): ethereum.CallResult<PlayFiLicenseSale__whitelistTiersResult> {
    let result = super.tryCall(
      "whitelistTiers",
      "whitelistTiers(uint256):(uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayFiLicenseSale__whitelistTiersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimLicenseEarlyAccessCall extends ethereum.Call {
  get inputs(): ClaimLicenseEarlyAccessCall__Inputs {
    return new ClaimLicenseEarlyAccessCall__Inputs(this);
  }

  get outputs(): ClaimLicenseEarlyAccessCall__Outputs {
    return new ClaimLicenseEarlyAccessCall__Outputs(this);
  }
}

export class ClaimLicenseEarlyAccessCall__Inputs {
  _call: ClaimLicenseEarlyAccessCall;

  constructor(call: ClaimLicenseEarlyAccessCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class ClaimLicenseEarlyAccessCall__Outputs {
  _call: ClaimLicenseEarlyAccessCall;

  constructor(call: ClaimLicenseEarlyAccessCall) {
    this._call = call;
  }
}

export class ClaimLicenseFriendsFamilyCall extends ethereum.Call {
  get inputs(): ClaimLicenseFriendsFamilyCall__Inputs {
    return new ClaimLicenseFriendsFamilyCall__Inputs(this);
  }

  get outputs(): ClaimLicenseFriendsFamilyCall__Outputs {
    return new ClaimLicenseFriendsFamilyCall__Outputs(this);
  }
}

export class ClaimLicenseFriendsFamilyCall__Inputs {
  _call: ClaimLicenseFriendsFamilyCall;

  constructor(call: ClaimLicenseFriendsFamilyCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class ClaimLicenseFriendsFamilyCall__Outputs {
  _call: ClaimLicenseFriendsFamilyCall;

  constructor(call: ClaimLicenseFriendsFamilyCall) {
    this._call = call;
  }
}

export class ClaimLicensePartnerCall extends ethereum.Call {
  get inputs(): ClaimLicensePartnerCall__Inputs {
    return new ClaimLicensePartnerCall__Inputs(this);
  }

  get outputs(): ClaimLicensePartnerCall__Outputs {
    return new ClaimLicensePartnerCall__Outputs(this);
  }
}

export class ClaimLicensePartnerCall__Inputs {
  _call: ClaimLicensePartnerCall;

  constructor(call: ClaimLicensePartnerCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tier(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get partnerCode(): string {
    return this._call.inputValues[2].value.toString();
  }

  get referral(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class ClaimLicensePartnerCall__Outputs {
  _call: ClaimLicensePartnerCall;

  constructor(call: ClaimLicensePartnerCall) {
    this._call = call;
  }
}

export class ClaimLicensePublicCall extends ethereum.Call {
  get inputs(): ClaimLicensePublicCall__Inputs {
    return new ClaimLicensePublicCall__Inputs(this);
  }

  get outputs(): ClaimLicensePublicCall__Outputs {
    return new ClaimLicensePublicCall__Outputs(this);
  }
}

export class ClaimLicensePublicCall__Inputs {
  _call: ClaimLicensePublicCall;

  constructor(call: ClaimLicensePublicCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tier(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get referral(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ClaimLicensePublicCall__Outputs {
  _call: ClaimLicensePublicCall;

  constructor(call: ClaimLicensePublicCall) {
    this._call = call;
  }
}

export class ClaimLicensePublicWhitelistCall extends ethereum.Call {
  get inputs(): ClaimLicensePublicWhitelistCall__Inputs {
    return new ClaimLicensePublicWhitelistCall__Inputs(this);
  }

  get outputs(): ClaimLicensePublicWhitelistCall__Outputs {
    return new ClaimLicensePublicWhitelistCall__Outputs(this);
  }
}

export class ClaimLicensePublicWhitelistCall__Inputs {
  _call: ClaimLicensePublicWhitelistCall;

  constructor(call: ClaimLicensePublicWhitelistCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tier(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class ClaimLicensePublicWhitelistCall__Outputs {
  _call: ClaimLicensePublicWhitelistCall;

  constructor(call: ClaimLicensePublicWhitelistCall) {
    this._call = call;
  }
}

export class ClaimLicenseTeamCall extends ethereum.Call {
  get inputs(): ClaimLicenseTeamCall__Inputs {
    return new ClaimLicenseTeamCall__Inputs(this);
  }

  get outputs(): ClaimLicenseTeamCall__Outputs {
    return new ClaimLicenseTeamCall__Outputs(this);
  }
}

export class ClaimLicenseTeamCall__Inputs {
  _call: ClaimLicenseTeamCall;

  constructor(call: ClaimLicenseTeamCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get merkleProof(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class ClaimLicenseTeamCall__Outputs {
  _call: ClaimLicenseTeamCall;

  constructor(call: ClaimLicenseTeamCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get guardian(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get merkleManager(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get referralManager(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetEarlyAccessMerkleRootCall extends ethereum.Call {
  get inputs(): SetEarlyAccessMerkleRootCall__Inputs {
    return new SetEarlyAccessMerkleRootCall__Inputs(this);
  }

  get outputs(): SetEarlyAccessMerkleRootCall__Outputs {
    return new SetEarlyAccessMerkleRootCall__Outputs(this);
  }
}

export class SetEarlyAccessMerkleRootCall__Inputs {
  _call: SetEarlyAccessMerkleRootCall;

  constructor(call: SetEarlyAccessMerkleRootCall) {
    this._call = call;
  }

  get _earlyAccessMerkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetEarlyAccessMerkleRootCall__Outputs {
  _call: SetEarlyAccessMerkleRootCall;

  constructor(call: SetEarlyAccessMerkleRootCall) {
    this._call = call;
  }
}

export class SetEarlyAccessSaleCall extends ethereum.Call {
  get inputs(): SetEarlyAccessSaleCall__Inputs {
    return new SetEarlyAccessSaleCall__Inputs(this);
  }

  get outputs(): SetEarlyAccessSaleCall__Outputs {
    return new SetEarlyAccessSaleCall__Outputs(this);
  }
}

export class SetEarlyAccessSaleCall__Inputs {
  _call: SetEarlyAccessSaleCall;

  constructor(call: SetEarlyAccessSaleCall) {
    this._call = call;
  }

  get status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetEarlyAccessSaleCall__Outputs {
  _call: SetEarlyAccessSaleCall;

  constructor(call: SetEarlyAccessSaleCall) {
    this._call = call;
  }
}

export class SetFriendsFamilyMerkleRootCall extends ethereum.Call {
  get inputs(): SetFriendsFamilyMerkleRootCall__Inputs {
    return new SetFriendsFamilyMerkleRootCall__Inputs(this);
  }

  get outputs(): SetFriendsFamilyMerkleRootCall__Outputs {
    return new SetFriendsFamilyMerkleRootCall__Outputs(this);
  }
}

export class SetFriendsFamilyMerkleRootCall__Inputs {
  _call: SetFriendsFamilyMerkleRootCall;

  constructor(call: SetFriendsFamilyMerkleRootCall) {
    this._call = call;
  }

  get _friendsFamilyMerkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetFriendsFamilyMerkleRootCall__Outputs {
  _call: SetFriendsFamilyMerkleRootCall;

  constructor(call: SetFriendsFamilyMerkleRootCall) {
    this._call = call;
  }
}

export class SetFriendsFamilySaleCall extends ethereum.Call {
  get inputs(): SetFriendsFamilySaleCall__Inputs {
    return new SetFriendsFamilySaleCall__Inputs(this);
  }

  get outputs(): SetFriendsFamilySaleCall__Outputs {
    return new SetFriendsFamilySaleCall__Outputs(this);
  }
}

export class SetFriendsFamilySaleCall__Inputs {
  _call: SetFriendsFamilySaleCall;

  constructor(call: SetFriendsFamilySaleCall) {
    this._call = call;
  }

  get status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetFriendsFamilySaleCall__Outputs {
  _call: SetFriendsFamilySaleCall;

  constructor(call: SetFriendsFamilySaleCall) {
    this._call = call;
  }
}

export class SetPartnerReceiverAddressCall extends ethereum.Call {
  get inputs(): SetPartnerReceiverAddressCall__Inputs {
    return new SetPartnerReceiverAddressCall__Inputs(this);
  }

  get outputs(): SetPartnerReceiverAddressCall__Outputs {
    return new SetPartnerReceiverAddressCall__Outputs(this);
  }
}

export class SetPartnerReceiverAddressCall__Inputs {
  _call: SetPartnerReceiverAddressCall;

  constructor(call: SetPartnerReceiverAddressCall) {
    this._call = call;
  }

  get partnerCode(): string {
    return this._call.inputValues[0].value.toString();
  }

  get receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetPartnerReceiverAddressCall__Outputs {
  _call: SetPartnerReceiverAddressCall;

  constructor(call: SetPartnerReceiverAddressCall) {
    this._call = call;
  }
}

export class SetPartnerSaleCall extends ethereum.Call {
  get inputs(): SetPartnerSaleCall__Inputs {
    return new SetPartnerSaleCall__Inputs(this);
  }

  get outputs(): SetPartnerSaleCall__Outputs {
    return new SetPartnerSaleCall__Outputs(this);
  }
}

export class SetPartnerSaleCall__Inputs {
  _call: SetPartnerSaleCall;

  constructor(call: SetPartnerSaleCall) {
    this._call = call;
  }

  get partnerCode(): string {
    return this._call.inputValues[0].value.toString();
  }

  get status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPartnerSaleCall__Outputs {
  _call: SetPartnerSaleCall;

  constructor(call: SetPartnerSaleCall) {
    this._call = call;
  }
}

export class SetPartnerTiersCall extends ethereum.Call {
  get inputs(): SetPartnerTiersCall__Inputs {
    return new SetPartnerTiersCall__Inputs(this);
  }

  get outputs(): SetPartnerTiersCall__Outputs {
    return new SetPartnerTiersCall__Outputs(this);
  }
}

export class SetPartnerTiersCall__Inputs {
  _call: SetPartnerTiersCall;

  constructor(call: SetPartnerTiersCall) {
    this._call = call;
  }

  get partnerCodes(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get individualCaps(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get totalCaps(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class SetPartnerTiersCall__Outputs {
  _call: SetPartnerTiersCall;

  constructor(call: SetPartnerTiersCall) {
    this._call = call;
  }
}

export class SetPublicMerkleRootCall extends ethereum.Call {
  get inputs(): SetPublicMerkleRootCall__Inputs {
    return new SetPublicMerkleRootCall__Inputs(this);
  }

  get outputs(): SetPublicMerkleRootCall__Outputs {
    return new SetPublicMerkleRootCall__Outputs(this);
  }
}

export class SetPublicMerkleRootCall__Inputs {
  _call: SetPublicMerkleRootCall;

  constructor(call: SetPublicMerkleRootCall) {
    this._call = call;
  }

  get _publicMerkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetPublicMerkleRootCall__Outputs {
  _call: SetPublicMerkleRootCall;

  constructor(call: SetPublicMerkleRootCall) {
    this._call = call;
  }
}

export class SetPublicSaleCall extends ethereum.Call {
  get inputs(): SetPublicSaleCall__Inputs {
    return new SetPublicSaleCall__Inputs(this);
  }

  get outputs(): SetPublicSaleCall__Outputs {
    return new SetPublicSaleCall__Outputs(this);
  }
}

export class SetPublicSaleCall__Inputs {
  _call: SetPublicSaleCall;

  constructor(call: SetPublicSaleCall) {
    this._call = call;
  }

  get status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPublicSaleCall__Outputs {
  _call: SetPublicSaleCall;

  constructor(call: SetPublicSaleCall) {
    this._call = call;
  }
}

export class SetPublicWhitelistSaleCall extends ethereum.Call {
  get inputs(): SetPublicWhitelistSaleCall__Inputs {
    return new SetPublicWhitelistSaleCall__Inputs(this);
  }

  get outputs(): SetPublicWhitelistSaleCall__Outputs {
    return new SetPublicWhitelistSaleCall__Outputs(this);
  }
}

export class SetPublicWhitelistSaleCall__Inputs {
  _call: SetPublicWhitelistSaleCall;

  constructor(call: SetPublicWhitelistSaleCall) {
    this._call = call;
  }

  get status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPublicWhitelistSaleCall__Outputs {
  _call: SetPublicWhitelistSaleCall;

  constructor(call: SetPublicWhitelistSaleCall) {
    this._call = call;
  }
}

export class SetReferralCall extends ethereum.Call {
  get inputs(): SetReferralCall__Inputs {
    return new SetReferralCall__Inputs(this);
  }

  get outputs(): SetReferralCall__Outputs {
    return new SetReferralCall__Outputs(this);
  }
}

export class SetReferralCall__Inputs {
  _call: SetReferralCall;

  constructor(call: SetReferralCall) {
    this._call = call;
  }

  get code(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetReferralCall__Outputs {
  _call: SetReferralCall;

  constructor(call: SetReferralCall) {
    this._call = call;
  }
}

export class SetReferralForReceiverCall extends ethereum.Call {
  get inputs(): SetReferralForReceiverCall__Inputs {
    return new SetReferralForReceiverCall__Inputs(this);
  }

  get outputs(): SetReferralForReceiverCall__Outputs {
    return new SetReferralForReceiverCall__Outputs(this);
  }
}

export class SetReferralForReceiverCall__Inputs {
  _call: SetReferralForReceiverCall;

  constructor(call: SetReferralForReceiverCall) {
    this._call = call;
  }

  get code(): string {
    return this._call.inputValues[0].value.toString();
  }

  get receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetReferralForReceiverCall__Outputs {
  _call: SetReferralForReceiverCall;

  constructor(call: SetReferralForReceiverCall) {
    this._call = call;
  }
}

export class SetTeamMerkleRootCall extends ethereum.Call {
  get inputs(): SetTeamMerkleRootCall__Inputs {
    return new SetTeamMerkleRootCall__Inputs(this);
  }

  get outputs(): SetTeamMerkleRootCall__Outputs {
    return new SetTeamMerkleRootCall__Outputs(this);
  }
}

export class SetTeamMerkleRootCall__Inputs {
  _call: SetTeamMerkleRootCall;

  constructor(call: SetTeamMerkleRootCall) {
    this._call = call;
  }

  get _teamMerkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetTeamMerkleRootCall__Outputs {
  _call: SetTeamMerkleRootCall;

  constructor(call: SetTeamMerkleRootCall) {
    this._call = call;
  }
}

export class SetTeamSaleCall extends ethereum.Call {
  get inputs(): SetTeamSaleCall__Inputs {
    return new SetTeamSaleCall__Inputs(this);
  }

  get outputs(): SetTeamSaleCall__Outputs {
    return new SetTeamSaleCall__Outputs(this);
  }
}

export class SetTeamSaleCall__Inputs {
  _call: SetTeamSaleCall;

  constructor(call: SetTeamSaleCall) {
    this._call = call;
  }

  get status(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetTeamSaleCall__Outputs {
  _call: SetTeamSaleCall;

  constructor(call: SetTeamSaleCall) {
    this._call = call;
  }
}

export class SetTiersCall extends ethereum.Call {
  get inputs(): SetTiersCall__Inputs {
    return new SetTiersCall__Inputs(this);
  }

  get outputs(): SetTiersCall__Outputs {
    return new SetTiersCall__Outputs(this);
  }
}

export class SetTiersCall__Inputs {
  _call: SetTiersCall;

  constructor(call: SetTiersCall) {
    this._call = call;
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get individualCaps(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get totalCaps(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class SetTiersCall__Outputs {
  _call: SetTiersCall;

  constructor(call: SetTiersCall) {
    this._call = call;
  }
}

export class SetWhitelistTiersCall extends ethereum.Call {
  get inputs(): SetWhitelistTiersCall__Inputs {
    return new SetWhitelistTiersCall__Inputs(this);
  }

  get outputs(): SetWhitelistTiersCall__Outputs {
    return new SetWhitelistTiersCall__Outputs(this);
  }
}

export class SetWhitelistTiersCall__Inputs {
  _call: SetWhitelistTiersCall;

  constructor(call: SetWhitelistTiersCall) {
    this._call = call;
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get individualCaps(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get totalCaps(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class SetWhitelistTiersCall__Outputs {
  _call: SetWhitelistTiersCall;

  constructor(call: SetWhitelistTiersCall) {
    this._call = call;
  }
}

export class WithdrawProceedsCall extends ethereum.Call {
  get inputs(): WithdrawProceedsCall__Inputs {
    return new WithdrawProceedsCall__Inputs(this);
  }

  get outputs(): WithdrawProceedsCall__Outputs {
    return new WithdrawProceedsCall__Outputs(this);
  }
}

export class WithdrawProceedsCall__Inputs {
  _call: WithdrawProceedsCall;

  constructor(call: WithdrawProceedsCall) {
    this._call = call;
  }
}

export class WithdrawProceedsCall__Outputs {
  _call: WithdrawProceedsCall;

  constructor(call: WithdrawProceedsCall) {
    this._call = call;
  }
}
